<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                        http://www.springframework.org/schema/tx
                          http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
                          http://www.springframework.org/schema/aop
                          http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
    <!--整合dao-->
    <!--注解扫描-->
    <context:component-scan base-package="com.jc"></context:component-scan>
    <!--1.指定数据库文件位置-->
    <context:property-placeholder location="classpath:db.properties"></context:property-placeholder>
    <!--2.指定数据源:c3p0-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--四大基本参数-->
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <!--配置连接池参数-->
        <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 5 -->
        <property name="initialPoolSize" value="5"/>
        <!--连接池中保留的最小连接数。Default: 5 -->
        <property name="minPoolSize" value="5"/>
        <!--连接池中保留的最大连接数。Default: 25 -->
        <property name="maxPoolSize" value="25"/>
        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="60"/>
        <!--每120秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="120"/>
    </bean>
    <!--3.配置sessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--指定myabtis核心配置文件的路径-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!--为实体类取别名-->
        <property name="typeAliasesPackage" value="com.jc.model"></property>
        <!--在这里扫描映射文件-->
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"></property>
    </bean>
    <!--4.配置mapper文件的扫描-->
    <bean id="scannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定扫描哪个包-->
        <property name="basePackage" value="com.jc.mapper"></property>
        <!--指定sessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
    <!--整合service-->
    <!--基于声明式事务管理(xml)-->
    <!--基于声明式事务管理(注解)-->
    <!--1.配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--指定数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--注解配置-->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
    <!--搭配@Transactional使用，在类上或者方法上使用该注解表示开启事务-->
    <!--配置切面类-->
    <bean id="myAspect" class="com.jc.myaspect.MyAspect"></bean>
    <!-- 3.配置aop(通知，切入点) -->
    <aop:config>
        <!-- 配置切面 -->
        <aop:aspect ref="myAspect">
            <!-- 配置通知和切入点 -->
            <!--            <aop:after-returning method="log" pointcut="execution(public String com.jc.serviceImpl.StorePutInServiceImpl.updateCheckOutSuccess(..))" />-->
            <!--            <aop:around method="getFieldsName" pointcut="execution(public String com.jc.serviceImpl.StorePutInServiceImpl.updateCheckOutSuccess(..))"/>-->
        </aop:aspect>
    </aop:config>
</beans>
