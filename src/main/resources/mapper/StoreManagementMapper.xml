<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空：namespace的名称必须指向刚刚接口类 -->
<mapper namespace="com.jc.mapper.StoreManagementMapper">
    <resultMap id="Store" type="com.jc.model.Store">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="product_id" property="product_id" jdbcType="INTEGER"/>
        <result column="number" property="number" jdbcType="DOUBLE"/>
    </resultMap>
    <!--查询全部-->
    <select id="listStoreAll" resultType="Store">
        SELECT t.id,
        product.name AS product_name,
        t.product_id,
        t.`number`,
        warn.warn_number
        FROM t_store as t
        LEFT JOIN t_sys_purchase_product AS product
        ON product.id = t.product_id
        LEFT JOIN t_store_warn AS warn
        ON warn.product_id = t.product_id

        <where>
        <if test="name !=null and name !=''">
            and product.name = #{name,jdbcType=VARCHAR}
        </if>
        </where>

        limit #{start,jdbcType=DECIMAL},#{end,jdbcType=DECIMAL}
    </select>

    <!--查询锁定量/活动量-->
    <select id="listAll" resultType="Store">
        SELECT
        t_store.product_id,
        t_store.number,
        t_store_checkout.number as check_number,
        p. NAME AS product_name,
        r.display_name AS state,
        warn.warn_number
        FROM
        t_store
        LEFT JOIN t_store_checkout ON t_store.product_id = t_store_checkout.product_id
        LEFT JOIN t_sys_resource AS r ON t_store_checkout.state = r.id
        LEFT JOIN t_sys_purchase_product AS p ON t_store.product_id = p.id
        LEFT JOIN t_store_warn AS warn ON warn.product_id = t_store.product_id

        <where>
            <if test="name !=null and name !=''">
                and product.name = #{name,jdbcType=VARCHAR}
            </if>
        </where>

        limit #{start,jdbcType=DECIMAL},#{end,jdbcType=DECIMAL}
    </select>

    <!--查询所有人员-->
    <select id="listUserAll" resultType="SysUsers">
        SELECT id,`name`,depart_id,depart_role_id from t_sys_users
    </select>
    <!--查询所有商品-->
    <select id="listProductAll" resultType="SysPurchaseProduct">
            select id,`name`,kind,model_type from t_sys_purchase_product
    </select>
    <!--查询所有库存-->
    <select id="listStoreNumber" resultType="Store">
        select id,product_id,`number` from t_store
    </select>
    <!--查询所有盘点-->
    <select id="listCheckTaskNumber" resultType="StoreCheckTaskDetail">
        select id,product_id,check_id,check_number from t_store_check_task_detail
    </select>
    <!--查询盘点全部-->
    <select id="listCheckAll" resultType="StoreCheck">
        SELECT
        t_sys_role.id as role_id,
        t.id,
        us. NAME AS creator,
        users. NAME AS check_user_id,
        t_sys_role.name as depart_name,
        t.create_date,
        t.end_date,
        t.begin_date,
        t.state,
        r.display_name
        FROM
        t_store_check AS t
        LEFT JOIN t_sys_users AS us ON t.creator = us.id
        LEFT JOIN t_sys_users AS users ON t.check_user_id = users.id
        LEFT JOIN t_sys_resource as r ON t.state = r.id
        LEFT JOIN t_sys_user_role ON users.depart_role_id = t_sys_user_role.role_id
        LEFT JOIN t_sys_role ON t_sys_user_role.role_id = t_sys_role.id
        LEFT JOIN t_sys_department ON users.depart_id = t_sys_department.id
        <where>
            <if test="startTime != null and startTime !='' and endTime != null and endTime !=''">
                AND begin_date between #{startTime} and #{endTime}
            </if>
        </where>
        limit #{start,jdbcType=DECIMAL},#{end,jdbcType=DECIMAL}
    </select>

    <!--根据账户查询相关的盘点任务-->
    <select id="listCheckWith" resultType="StoreCheck">
        SELECT
        t_sys_role.id as role_id,
        t.id,
        us. NAME AS creator,
        users. NAME AS check_user_id,
        t_sys_role.name as depart_name,
        t.create_date,
        t.end_date,
        t.begin_date,
        t.state,
        r.display_name
        FROM
        t_store_check AS t
        LEFT JOIN t_sys_users AS us ON t.creator = us.id
        LEFT JOIN t_sys_users AS users ON t.check_user_id = users.id
        LEFT JOIN t_sys_resource as r ON t.state = r.id
        LEFT JOIN t_sys_user_role ON users.depart_role_id = t_sys_user_role.role_id
        LEFT JOIN t_sys_role ON t_sys_user_role.role_id = t_sys_role.id
        LEFT JOIN t_sys_department ON users.depart_id = t_sys_department.id
        where  users.NAME =#{name}
        <where>
            <if test="startTime != null and startTime !='' and endTime != null and endTime !=''">
                AND begin_date between #{startTime} and #{endTime}
            </if>
        </where>
        limit #{start,jdbcType=DECIMAL},#{end,jdbcType=DECIMAL}
    </select>

    <!--查询全部出库信息-->
    <select id="listCheckOut" resultType="StoreCheckOut">

        SELECT
        t.id,
        us.name as creator,
        t.create_date,
        t.modifier,
        t.modify_date,
        r.display_name as state,
        t.source_kind,
        t.checkout_date,
        u.name as checkout_user_name,
        t.checkout_user_id,
        p.name as product_name,
        t.product_id,
        t.number
        FROM
        t_store_checkout as t
        LEFT JOIN
        t_sys_users as us
        ON t.creator = us.id
        LEFT JOIN
        t_sys_users as u
        ON t.checkout_user_id = u.id
        LEFT JOIN t_sys_resource as r
        ON t.state = r.id
        LEFT JOIN t_sys_purchase_product as p
        ON t.product_id = p.id
        <where>
        <if test="startTime != null and startTime !='' and endTime != null and endTime !=''">
            AND checkout_date between #{startTime} and #{endTime}
        </if>
        <if test="name !=null and name !=''">
            AND u.name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="source_kind !=null and source_kind !=''">
            AND t.source_kind = #{source_kind,jdbcType=VARCHAR}
        </if>
        </where>
        limit #{start,jdbcType=DECIMAL},#{end,jdbcType=DECIMAL}
    </select>
    <!--查询库存量-->
    <select id="CheckOutCount_number" resultType="DOUBLE">
  SELECT SUM(s.number) as number from t_store as s where s.product_id = #{product_id} GROUP BY s.product_id
    </select>
    <!--查询锁定量-->
    <select id="CheckOutLocking_number" resultType="DOUBLE">
  SELECT SUM(ch.number) as number from t_store_checkout as ch where ch.product_id = #{product_id} AND ch.state = 3 GROUP BY ch.product_id
    </select>

    <!--查询待发货量-->
    <select id="CheckOutDelivered_number" resultType="DOUBLE">
    SELECT SUM(ch.number) as number from t_store_checkout as ch where ch.product_id = #{product_id} AND ch.state = 5 GROUP BY ch.product_id
    </select>

    <!--查询全部入库信息-->
    <select id="listPutIn" resultType="StorePutIn">

        SELECT
        t.id,
        us.name as creator,
        t.create_date,
        t.modifier,
        t.modify_date,
        r.display_name as state,
        t.put_id_date,
        t.source_type,
        u.name as put_in_user_name,
        t.put_in_user_id,
        p.name as product_name,
        t.product_id,
        t.put_in_number
        FROM
        t_store_put_in as t
        LEFT JOIN
        t_sys_users as us
        ON t.creator = us.id
        LEFT JOIN
        t_sys_users as u
        ON t.put_in_user_id = u.id
        LEFT JOIN t_sys_resource as r
        ON t.state = r.id
        LEFT JOIN t_sys_purchase_product as p
        ON t.product_id = p.id
        <where>
        <if test="startTime != null and startTime !='' and endTime != null and endTime !=''">
            AND put_id_date between #{startTime} and #{endTime}
        </if>
        <if test="name !=null and name !=''">
            AND u.name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="source_type !=null and source_type !=''">
            AND t.source_type = #{source_type,jdbcType=VARCHAR}
        </if>
        </where>
        limit #{start,jdbcType=DECIMAL},#{end,jdbcType=DECIMAL}
    </select>

    <!--统计条数-->
    <select id="countGetAll" parameterType="map" resultType="Integer">
         select count(1) from t_store
    </select>

    <select id="countGetCheckAll" parameterType="map" resultType="Integer">
         select count(1) from t_store_check
    </select>

    <select id="countGetPutInAll" parameterType="map" resultType="Integer">
         select count(1) from t_store_put_in
    </select>

    <select id="countGetCheckOutAll" parameterType="map" resultType="Integer">
         select count(1) from t_store_checkout
    </select>

    <!--根据商品ID查询-->
    <select id="loadByProduct_id" parameterType="java.lang.Integer" resultType="StoreWarn">
        SELECT
	t.id,
	product. NAME AS product_name,
	t.product_id,
	t.warn_number
    FROM
	t_store_warn AS t
    LEFT JOIN t_sys_purchase_product AS product ON product.id = t.product_id
    where product_id=#{0}
    </select>

    <select id="loadById" parameterType="java.lang.Integer" resultType="SysUsersBeans">
        SELECT
        t_sys_users.name as user_name,
        t_sys_role.name,
        t_sys_role.department_id,
        t_sys_user_role.role_id,
        t_sys_department.name as depart_id
        FROM
        t_sys_users
        LEFT JOIN
        t_sys_user_role
        ON t_sys_users.depart_role_id = t_sys_user_role.role_id
        LEFT JOIN
        t_sys_role
        ON
        t_sys_user_role.role_id = t_sys_role.id
        LEFT JOIN
        t_sys_department
        ON
        t_sys_users.depart_id = t_sys_department.id
        WHERE
        t_sys_users.id=#{0}
    </select>

    <!--设置预警值-->
    <update id="updateWarn" parameterType="StoreWarn">
        UPDATE t_store_warn SET warn_number =#{warn_number}
        WHERE  product_id=#{product_id}
    </update>
    <!--查询全部人员名字-->
    <select id="listUsers" resultType="SysUsers">
       SELECT
        users.id,
        users.name,
        job.name as job_id,
        role.name as depart_role_id,
        depar.name as depart_id
        FROM
        t_sys_users AS users
        LEFT JOIN
        t_sys_user_role AS user_role
        ON users.id = user_role.user_id
        LEFT JOIN
        t_sys_role as role
        on user_role.role_id = role.id
        LEFT JOIN
        t_sys_department as depar
        ON role.department_id = depar.id
        LEFT JOIN t_sys_job as job
        ON users.job_id = job.id
        where users.depart_id =#{department_id}
    </select>
<!--添加盘点任务-->
    <insert id="insertCheckTask" parameterType="StoreCheck">
        INSERT INTO t_store_check(creator,create_date,check_user_id,state,begin_date,end_date)
        VALUES (#{creator},#{create_date},#{check_user_id},#{state},#{begin_date},#{end_date})

        <selectKey keyProperty="id" resultType="int">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>
<!--添加盘点明细-->
    <insert id="insertCheckTaskDetail" parameterType="StoreCheckTaskDetail">
        INSERT INTO t_store_check_task_detail(id,product_id,check_id)
        VALUES (#{id},#{value},#{check_id})
    </insert>
<!--根据主键删除盘点任务-->
    <delete id="deleteCheckTask" parameterType="java.lang.Integer">
        DELETE  FROM  t_store_check WHERE id=#{0}
    </delete>

<!--根据外键删除明细-->
    <delete id="deleteCheckTaskDetail" parameterType="java.lang.Integer">
        DELETE  FROM  t_store_check_task_detail WHERE check_id=#{0}
    </delete>


    <select id="listByCheckId" resultType="StoreCheckTaskDetail">
    SELECT
	detail.product_id,
	detail.check_id,
	detail.check_number,
	product.name
    FROM
	t_store_check_task_detail as detail
    LEFT JOIN t_sys_purchase_product as product
    on detail.product_id = product.id
    WHERE
	check_id =#{0}
    </select>
<!--封装类的查询单个盘点任务-->
    <select id="loadBy_id" resultType="StoreCheck">
    SELECT
	t.creator,
	t.create_date,
	t.check_user_id,
	t.begin_date,
	t.end_date,
	u.name creatorname,
	us.name check_user_name
    FROM
        t_store_check as t
    LEFT JOIN t_sys_users as u
    ON t.creator = u.id
    LEFT JOIN t_sys_users as us
    ON t.check_user_id = us.id
    WHERE
	t.id = #{0}
    </select>

    <select id="loadByCheck_Id" resultType="StoreCheck">
    SELECT
	t.creator,
	t.create_date,
	t.check_user_id,
	t.begin_date,
	t.end_date,
	u.name creatorname,
	us.name check_user_name
    FROM
        t_store_check as t
    LEFT JOIN t_sys_users as u
    ON t.creator = u.id
    LEFT JOIN t_sys_users as us
    ON t.check_user_id = us.id
    WHERE
	t.id = #{0}
    </select>
    <!--添加盘点明细-->
    <insert id="updateCountingTaskDetail" parameterType="StoreCheckTaskDetail">
        INSERT INTO t_store_check_task_detail(product_id,check_id)
        VALUES (#{product_id},#{check_id})
    </insert>
 <!--修改盘点任务-->
    <update id="updateCountingTask" parameterType="StoreCheck">
        UPDATE t_store_check SET modifier=#{modifier},modify_date=#{modify_date},check_user_id=#{check_user_id},begin_date=#{begin_date},state=#{state},end_date=#{end_date}
        WHERE  id=#{id}
    </update>
<!--审核盘点数量-->
    <update id="updateStoreNumber" parameterType="Store">
        UPDATE t_store SET `number`=#{number}
        WHERE  product_id=#{product_id}
    </update>

    <!--驳回盘点-->
    <update id="updateState" parameterType="StoreCheck">
        UPDATE t_store_check SET state = 5
        WHERE  id=#{id}
    </update>
    <!--确定盘点明细-->
    <update id="SureCountingTask" parameterType="StoreCheck">
        UPDATE t_store_check_task_detail SET check_number=#{check_number}
        WHERE  product_id=#{product_id} and check_id=#{check_id}
    </update>
 <!--统计商品库存量-->
    <select id="count" parameterType="java.lang.Integer" resultType="INTEGER">
       SELECT `number` from t_store WHERE product_id=#{product_id}
    </select>

    <!--查询损耗-->
    <select id="countStoreLoss" resultType="LossBeans">
   SELECT
    t.id,
    t.modify_date,
	t.state,
    p.name product_name,
    d.stock_number,
	d.check_number
    FROM
    t_store_check as t
    LEFT JOIN
    t_store_check_task_detail as d
    ON d.check_id = t.id
	LEFT JOIN
    t_sys_purchase_product as p
    ON d.product_id = p.id
    <where>
        <if test="startTime != null and startTime !='' and endTime != null and endTime !=''">
            AND modify_date between #{startTime} and #{endTime}
        </if>
    </where>
    </select>

</mapper>
